{"ast":null,"code":"var _jsxFileName = \"/home/deepak/Bharat/croma-toil/src/components/Header/DropDown.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport './DropDown.css';\nimport MultiLevel from './MultiLevel';\nimport MenuSharpIcon from '@material-ui/icons/MenuSharp';\nimport CloseSharpIcon from '@material-ui/icons/CloseSharp';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst DropDown = () => {\n  _s();\n\n  const [showList, setShowList] = React.useState(true);\n  /* When the user clicks on the button, \n  toggle between hiding and showing the dropdown content */\n\n  function myFunction() {\n    setShowList(!showList);\n    document.getElementById(\"myDropdown\").classList.toggle(\"show\");\n  } // Close the dropdown if the user clicks outside of it\n\n\n  window.onclick = function (event) {\n    if (!event.target.matches('.dropbtn')) {\n      var dropdowns = document.getElementsByClassName(\"dropdown-content\");\n      var i;\n\n      for (i = 0; i < dropdowns.length; i++) {\n        var openDropdown = dropdowns[i];\n\n        if (openDropdown.classList.contains('show')) {\n          openDropdown.classList.remove('show');\n          setShowList(!showList);\n        }\n      }\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Clickable Dropdown\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 1\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Click on the button to open the dropdown menu.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 1\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"dropdown\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onclick: \"myFunction()\",\n        class: \"dropbtn\",\n        children: showList ? /*#__PURE__*/_jsxDEV(MenuSharpIcon, {\n          className: \"menu_icon_first\",\n          onClick: myFunction\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 29\n        }, this) : /*#__PURE__*/_jsxDEV(CloseSharpIcon, {\n          className: \"menu_icon_first\",\n          onClick: myFunction\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"myDropdown\",\n        class: \"dropdown-content\",\n        children: /*#__PURE__*/_jsxDEV(MultiLevel, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 5\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 3\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 1\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n\n_s(DropDown, \"QgVZU2tQ+PBDSJ8NlC0b/TNeqTg=\");\n\n_c = DropDown;\nexport default DropDown;\n\nvar _c;\n\n$RefreshReg$(_c, \"DropDown\");","map":{"version":3,"sources":["/home/deepak/Bharat/croma-toil/src/components/Header/DropDown.js"],"names":["React","MultiLevel","MenuSharpIcon","CloseSharpIcon","DropDown","showList","setShowList","useState","myFunction","document","getElementById","classList","toggle","window","onclick","event","target","matches","dropdowns","getElementsByClassName","i","length","openDropdown","contains","remove"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,gBAAP;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,aAAP,MAA0B,8BAA1B;AACA,OAAOC,cAAP,MAA2B,+BAA3B;;;AAGA,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AAEnB,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BN,KAAK,CAACO,QAAN,CAAe,IAAf,CAAhC;AAGA;AACJ;;AACA,WAASC,UAAT,GAAsB;AAClBF,IAAAA,WAAW,CAAC,CAACD,QAAF,CAAX;AACAI,IAAAA,QAAQ,CAACC,cAAT,CAAwB,YAAxB,EAAsCC,SAAtC,CAAgDC,MAAhD,CAAuD,MAAvD;AACD,GAVoB,CAYrB;;;AACAC,EAAAA,MAAM,CAACC,OAAP,GAAiB,UAASC,KAAT,EAAgB;AAC/B,QAAI,CAACA,KAAK,CAACC,MAAN,CAAaC,OAAb,CAAqB,UAArB,CAAL,EAAuC;AACrC,UAAIC,SAAS,GAAGT,QAAQ,CAACU,sBAAT,CAAgC,kBAAhC,CAAhB;AACA,UAAIC,CAAJ;;AACA,WAAKA,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGF,SAAS,CAACG,MAA1B,EAAkCD,CAAC,EAAnC,EAAuC;AACrC,YAAIE,YAAY,GAAGJ,SAAS,CAACE,CAAD,CAA5B;;AACA,YAAIE,YAAY,CAACX,SAAb,CAAuBY,QAAvB,CAAgC,MAAhC,CAAJ,EAA6C;AAC3CD,UAAAA,YAAY,CAACX,SAAb,CAAuBa,MAAvB,CAA8B,MAA9B;AACAlB,UAAAA,WAAW,CAAC,CAACD,QAAF,CAAX;AACD;AACF;AACF;AACF,GAZD;;AAaA,sBACE;AAAA,4BAKJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YALI,eAMJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YANI,eAQJ;AAAK,MAAA,KAAK,EAAC,UAAX;AAAA,8BACE;AAAQ,QAAA,OAAO,EAAC,cAAhB;AAA+B,QAAA,KAAK,EAAC,SAArC;AAAA,kBAEsBA,QAAQ,gBAEJ,QAAC,aAAD;AAAe,UAAA,SAAS,EAAC,iBAAzB;AAA2C,UAAA,OAAO,EAAEG;AAApD;AAAA;AAAA;AAAA;AAAA,gBAFI,gBAIJ,QAAC,cAAD;AAAgB,UAAA,SAAS,EAAC,iBAA1B;AAA4C,UAAA,OAAO,EAAEA;AAArD;AAAA;AAAA;AAAA;AAAA;AAN1B;AAAA;AAAA;AAAA;AAAA,cADF,eAUE;AAAK,QAAA,EAAE,EAAC,YAAR;AAAqB,QAAA,KAAK,EAAC,kBAA3B;AAAA,+BACE,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAVF;AAAA;AAAA;AAAA;AAAA;AAAA,YARI;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA6BD,CAvDD;;GAAMJ,Q;;KAAAA,Q;AAyDN,eAAeA,QAAf","sourcesContent":["import React from 'react';\nimport './DropDown.css';\nimport MultiLevel from './MultiLevel';\nimport MenuSharpIcon from '@material-ui/icons/MenuSharp';\nimport CloseSharpIcon from '@material-ui/icons/CloseSharp';\n\n\nconst DropDown = () => {\n\n    const [showList, setShowList] = React.useState(true)\n\n\n    /* When the user clicks on the button, \ntoggle between hiding and showing the dropdown content */\nfunction myFunction() {\n    setShowList(!showList);\n    document.getElementById(\"myDropdown\").classList.toggle(\"show\");\n  }\n  \n  // Close the dropdown if the user clicks outside of it\n  window.onclick = function(event) {\n    if (!event.target.matches('.dropbtn')) {\n      var dropdowns = document.getElementsByClassName(\"dropdown-content\");\n      var i;\n      for (i = 0; i < dropdowns.length; i++) {\n        var openDropdown = dropdowns[i];\n        if (openDropdown.classList.contains('show')) {\n          openDropdown.classList.remove('show');\n          setShowList(!showList);\n        }\n      }\n    }\n  }\n  return (\n    <div>\n\n\n\n\n<h2>Clickable Dropdown</h2>\n<p>Click on the button to open the dropdown menu.</p>\n\n<div class=\"dropdown\">\n  <button onclick=\"myFunction()\" class=\"dropbtn\">\n  {\n                        showList ?\n\n                            <MenuSharpIcon className='menu_icon_first' onClick={myFunction} /> :\n\n                            <CloseSharpIcon className='menu_icon_first' onClick={myFunction} />\n                    }\n  </button>\n  <div id=\"myDropdown\" class=\"dropdown-content\">\n    <MultiLevel />\n  </div>\n</div>\n\n\n\n\n    </div>\n  )\n}\n\nexport default DropDown"]},"metadata":{},"sourceType":"module"}